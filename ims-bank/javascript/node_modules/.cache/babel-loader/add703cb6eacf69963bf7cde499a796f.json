{"ast":null,"code":"import _objectSpread from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _readOnlyError from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\";\nexport var organizeClientsAccounts = function organizeClientsAccounts(transactions) {\n  var clients = [];\n  transactions.forEach(function (element) {\n    if (clients.findIndex(function (item) {\n      return item.id == element.customer_id;\n    }) != -1) {\n      var newClients = clients.map(function (item) {\n        if (item.id === element.customer_id) {\n          if (element.account_type === \"savings\") {\n            return _objectSpread(_objectSpread({}, item), {}, {\n              savings: item.savings + getTransactionNumber(transaction_amount)\n            });\n          } else {\n            return _objectSpread(_objectSpread({}, item), {}, {\n              savings: item.checking + getTransactionNumber(transaction_amount)\n            });\n          }\n        }\n\n        return item;\n      });\n      newClients, _readOnlyError(\"clients\");\n    } else {\n      var client = {\n        id: element.customer_id,\n        name: element.customer_name,\n        email: element.customer_email,\n        savings: element.account_type === \"savings\" ? getTransactionNumber(element.transaction_amount) : 0,\n        checking: element.account_type === \"checking\" ? getTransactionNumber(element.transaction_amount) : 0\n      };\n      clients.push(client);\n    }\n  });\n  console.log(\"clients before\", clients);\n  return clients;\n};\nexport var getTransactionNumber = function getTransactionNumber(string) {\n  console.log(\"conver string to number\", Number(string.replace('$', '')));\n  return Number(string.replace(/$/ig, ''));\n};","map":{"version":3,"sources":["/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/src/helpers/clients.js"],"names":["organizeClientsAccounts","transactions","clients","forEach","element","findIndex","item","id","customer_id","newClients","map","account_type","savings","getTransactionNumber","transaction_amount","checking","client","name","customer_name","email","customer_email","push","console","log","string","Number","replace"],"mappings":";;AAAA,OAAO,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,YAAD,EAAkB;AACvD,MAAMC,OAAO,GAAG,EAAhB;AAEAD,EAAAA,YAAY,CAACE,OAAb,CAAqB,UAAAC,OAAO,EAAI;AAC9B,QAAIF,OAAO,CAACG,SAAR,CAAkB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,IAAWH,OAAO,CAACI,WAAvB;AAAA,KAAtB,KAA6D,CAAC,CAAlE,EAAoE;AAClE,UAAMC,UAAU,GAAGP,OAAO,CAACQ,GAAR,CAAY,UAAAJ,IAAI,EAAI;AACrC,YAAIA,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACI,WAAxB,EAAqC;AACnC,cAAGJ,OAAO,CAACO,YAAR,KAAyB,SAA5B,EAAuC;AACrC,mDAAWL,IAAX;AAAiBM,cAAAA,OAAO,EAAEN,IAAI,CAACM,OAAL,GAAeC,oBAAoB,CAACC,kBAAD;AAA7D;AACD,WAFD,MAEO;AACL,mDAAWR,IAAX;AAAiBM,cAAAA,OAAO,EAAEN,IAAI,CAACS,QAAL,GAAgBF,oBAAoB,CAACC,kBAAD;AAA9D;AACD;AACF;;AACD,eAAOR,IAAP;AACD,OATkB,CAAnB;AAUUG,MAAAA,UAAV;AACD,KAZD,MAYO;AACL,UAAMO,MAAM,GAAG;AACbT,QAAAA,EAAE,EAAEH,OAAO,CAACI,WADC;AAEbS,QAAAA,IAAI,EAAEb,OAAO,CAACc,aAFD;AAGbC,QAAAA,KAAK,EAAEf,OAAO,CAACgB,cAHF;AAIbR,QAAAA,OAAO,EAAER,OAAO,CAACO,YAAR,KAAyB,SAAzB,GAAqCE,oBAAoB,CAACT,OAAO,CAACU,kBAAT,CAAzD,GAAwF,CAJpF;AAKbC,QAAAA,QAAQ,EAAEX,OAAO,CAACO,YAAR,KAAyB,UAAzB,GAAsCE,oBAAoB,CAACT,OAAO,CAACU,kBAAT,CAA1D,GAAyF;AALtF,OAAf;AAOAZ,MAAAA,OAAO,CAACmB,IAAR,CAAaL,MAAb;AACD;AACF,GAvBD;AAwBAM,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BrB,OAA9B;AACA,SAAOA,OAAP;AACD,CA7BM;AA+BP,OAAO,IAAMW,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACW,MAAD,EAAY;AAC9CF,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCE,MAAM,CAACD,MAAM,CAACE,OAAP,CAAe,GAAf,EAAoB,EAApB,CAAD,CAA7C;AACA,SAAOD,MAAM,CAACD,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsB,EAAtB,CAAD,CAAb;AACD,CAHM","sourcesContent":["export const organizeClientsAccounts = (transactions) => {\n  const clients = [];\n\n  transactions.forEach(element => {\n    if (clients.findIndex(item => item.id == element.customer_id) != -1){\n      const newClients = clients.map(item => {\n        if (item.id === element.customer_id) {\n          if(element.account_type === \"savings\") {\n            return {...item, savings: item.savings + getTransactionNumber(transaction_amount)};\n          }else  {\n            return {...item, savings: item.checking + getTransactionNumber(transaction_amount)};\n          }          \n        }\n        return item;\n      });\n      clients = newClients;\n    } else {\n      const client = {\n        id: element.customer_id,\n        name: element.customer_name,\n        email: element.customer_email,\n        savings: element.account_type === \"savings\" ? getTransactionNumber(element.transaction_amount) : 0,\n        checking: element.account_type === \"checking\" ? getTransactionNumber(element.transaction_amount) : 0,\n      }\n      clients.push(client);\n    }\n  });\n  console.log(\"clients before\", clients)\n  return clients;\n}\n\nexport const getTransactionNumber = (string) => {\n  console.log(\"conver string to number\", Number(string.replace('$', '')))\n  return Number(string.replace(/$/ig, ''));\n}"]},"metadata":{},"sourceType":"module"}