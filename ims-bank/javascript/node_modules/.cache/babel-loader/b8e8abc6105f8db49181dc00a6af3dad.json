{"ast":null,"code":"import _asyncToGenerator from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/src/components/Bank.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport api from '../services/api';\nimport { Column, CellProps } from 'react-table';\nimport { organizeClientsAccounts } from \"../helpers/clients\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Bank = function Bank() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clients = _useState4[0],\n      setClients = _useState4[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$api$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get('transactions.json');\n\n          case 2:\n            _yield$api$get = _context.sent;\n            data = _yield$api$get.data;\n            setTransactions(data);\n            setClients(organizeClientsAccounts(data));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var columns = useMemo(function () {\n    return [{\n      Header: \"Customer's name\",\n      colSpan: 1,\n      accessor: 'name'\n    }, {\n      Header: \"Checking account total\",\n      accessor: 'checking',\n      colSpan: 2\n    }, {\n      Header: \"Saving account total\",\n      accessor: 'saving',\n      colSpan: 1\n    }, {\n      Header: \"Total savings + checking account\",\n      accessor: 'productCategory',\n      Cell: function Cell(row) {\n        return (row.savings + row.checking).toFixed(2);\n      },\n      colSpan: 2\n    }];\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: clients,\n    initialState: {\n      hiddenColumns: ['id'],\n      pageIndex: 0\n    }\n  }, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageCount = _useTable.pageCount,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      gotoPage = _useTable.gotoPage,\n      pageIndex = _useTable.state.pageIndex;\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Replace this with your summary table\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Bank, \"/qGibJvSQ2NHHkowHIeKQ9VrEoE=\", true);\n\n_c = Bank;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bank\");","map":{"version":3,"sources":["/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/src/components/Bank.js"],"names":["React","useEffect","useState","useMemo","api","Column","CellProps","organizeClientsAccounts","Bank","transactions","setTransactions","clients","setClients","get","data","columns","Header","colSpan","accessor","Cell","row","savings","checking","toFixed","useTable","initialState","hiddenColumns","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageCount","nextPage","previousPage","gotoPage","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,uBAAT,QAAwC,oBAAxC;;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACxB,kBAAwCN,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOO,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA8BR,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AAEAX,EAAAA,SAAS,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaG,GAAG,CAACS,GAAJ,CAAQ,mBAAR,CADb;;AAAA;AAAA;AACDC,YAAAA,IADC,kBACDA,IADC;AAERJ,YAAAA,eAAe,CAACI,IAAD,CAAf;AACAF,YAAAA,UAAU,CAACL,uBAAuB,CAACO,IAAD,CAAxB,CAAV;;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAKN,EALM,CAAT;AAQA,MAAMC,OAAO,GAAGZ,OAAO,CACrB;AAAA,WAAM,CACJ;AACEa,MAAAA,MAAM,EAAE,iBADV;AAEEC,MAAAA,OAAO,EAAE,CAFX;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KADI,EAMJ;AACEF,MAAAA,MAAM,EAAE,wBADV;AAEEE,MAAAA,QAAQ,EAAE,UAFZ;AAGED,MAAAA,OAAO,EAAE;AAHX,KANI,EAWJ;AACED,MAAAA,MAAM,EAAE,sBADV;AAEEE,MAAAA,QAAQ,EAAE,QAFZ;AAGED,MAAAA,OAAO,EAAE;AAHX,KAXI,EAgBJ;AACED,MAAAA,MAAM,EAAE,kCADV;AAEEE,MAAAA,QAAQ,EAAE,iBAFZ;AAGEC,MAAAA,IAAI,EAAI,cAAAC,GAAG,EAAK;AACd,eAAO,CAACA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACE,QAAnB,EAA6BC,OAA7B,CAAqC,CAArC,CAAP;AACD,OALH;AAMEN,MAAAA,OAAO,EAAE;AANX,KAhBI,CAAN;AAAA,GADqB,EA0BrB,EA1BqB,CAAvB;;AA6BA,kBAaIO,QAAQ,CACV;AACET,IAAAA,OAAO,EAAPA,OADF;AAEED,IAAAA,IAAI,EAAEH,OAFR;AAGEc,IAAAA,YAAY,EAAE;AAAEC,MAAAA,aAAa,EAAE,CAAC,IAAD,CAAjB;AAAyBC,MAAAA,SAAS,EAAE;AAApC;AAHhB,GADU,EAMVC,aANU,CAbZ;AAAA,MACEC,aADF,aACEA,aADF;AAAA,MAEEC,iBAFF,aAEEA,iBAFF;AAAA,MAGEC,YAHF,aAGEA,YAHF;AAAA,MAIEC,UAJF,aAIEA,UAJF;AAAA,MAKEC,IALF,aAKEA,IALF;AAAA,MAMEC,eANF,aAMEA,eANF;AAAA,MAOEC,WAPF,aAOEA,WAPF;AAAA,MAQEC,SARF,aAQEA,SARF;AAAA,MASEC,QATF,aASEA,QATF;AAAA,MAUEC,YAVF,aAUEA,YAVF;AAAA,MAWEC,QAXF,aAWEA,QAXF;AAAA,MAYWZ,SAZX,aAYEa,KAZF,CAYWb,SAZX;;AAsBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAED,CAjEM;;GAAMnB,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport api from '../services/api';\nimport { Column, CellProps } from 'react-table';\nimport { organizeClientsAccounts } from \"../helpers/clients\";\n\nexport const Bank = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [clients, setClients] = useState([]);\n\n  useEffect(async () => {\n    const {data} = await api.get('transactions.json');\n    setTransactions(data)\n    setClients(organizeClientsAccounts(data));\n    \n  }, []);\n\n  \n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Customer's name\",\n        colSpan: 1,\n        accessor: 'name',\n      },\n      {\n        Header: \"Checking account total\",\n        accessor: 'checking',\n        colSpan: 2,\n      },\n      {\n        Header: \"Saving account total\",\n        accessor: 'saving',\n        colSpan: 1,\n      },\n      {\n        Header: \"Total savings + checking account\",\n        accessor: 'productCategory',\n        Cell: ( row  => {\n          return (row.savings + row.checking).toFixed(2) \n        }),\n        colSpan: 2,\n      },\n    ],\n    [],\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    nextPage,\n    previousPage,\n    gotoPage,\n    state: { pageIndex },\n  } = useTable(\n    {\n      columns,\n      data: clients,\n      initialState: { hiddenColumns: ['id'], pageIndex: 0 },\n    },\n    usePagination,\n  );\n\n  return <p>Replace this with your summary table</p>;\n\n};\n"]},"metadata":{},"sourceType":"module"}