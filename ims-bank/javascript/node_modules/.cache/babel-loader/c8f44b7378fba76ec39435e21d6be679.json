{"ast":null,"code":"import _objectSpread from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/src/components/Bank.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport api from '../services/api';\nimport { Column, CellProps, useTable } from 'react-table';\nimport { organizeClientsAccounts } from \"../helpers/clients\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Bank = function Bank() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clients = _useState4[0],\n      setClients = _useState4[1];\n\n  var tableInstance = useTable({\n    columns: columns,\n    data: data\n  });\n  var getTableProps = tableInstance.getTableProps,\n      getTableBodyProps = tableInstance.getTableBodyProps,\n      headerGroups = tableInstance.headerGroups,\n      rows = tableInstance.rows,\n      prepareRow = tableInstance.prepareRow;\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$api$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get('transactions.json');\n\n          case 2:\n            _yield$api$get = _context.sent;\n            data = _yield$api$get.data;\n            setTransactions(data);\n            setClients(organizeClientsAccounts(data));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var columns = useMemo(function () {\n    return [{\n      Header: \"Customer's name\",\n      accessor: 'name'\n    }, {\n      Header: \"Checking account total\",\n      accessor: 'checking'\n    }, {\n      Header: \"Saving account total\",\n      accessor: 'saving'\n    }];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(function (headerGroup) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n          children: headerGroup.headers.map(function (column) {\n            return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n              children: column.render('Header')\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 14\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 10\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n      children: rows.map(function (row) {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n          children: row.cells.map(function (cell) {\n            return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n              children: cell.render('Cell')\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 18\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Bank, \"cOuEhzjzqD6u3lhxZlxgfKjgrks=\", false, function () {\n  return [useTable];\n});\n\n_c = Bank;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bank\");","map":{"version":3,"sources":["/home/anaramirez/Documentos/eng-recruiting/ims-bank/javascript/src/components/Bank.js"],"names":["React","useEffect","useState","useMemo","api","Column","CellProps","useTable","organizeClientsAccounts","Bank","transactions","setTransactions","clients","setClients","tableInstance","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","get","Header","accessor","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,aAA5C;AACA,SAASC,uBAAT,QAAwC,oBAAxC;;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACxB,kBAAwCP,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA8BT,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,aAAa,GAAGP,QAAQ,CAAC;AAAEQ,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,IAAI,EAAJA;AAAX,GAAD,CAA9B;AACA,MACEC,aADF,GAMIH,aANJ,CACEG,aADF;AAAA,MAEEC,iBAFF,GAMIJ,aANJ,CAEEI,iBAFF;AAAA,MAGEC,YAHF,GAMIL,aANJ,CAGEK,YAHF;AAAA,MAIEC,IAJF,GAMIN,aANJ,CAIEM,IAJF;AAAA,MAKEC,UALF,GAMIP,aANJ,CAKEO,UALF;AAQApB,EAAAA,SAAS,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaG,GAAG,CAACkB,GAAJ,CAAQ,mBAAR,CADb;;AAAA;AAAA;AACDN,YAAAA,IADC,kBACDA,IADC;AAERL,YAAAA,eAAe,CAACK,IAAD,CAAf;AACAH,YAAAA,UAAU,CAACL,uBAAuB,CAACQ,IAAD,CAAxB,CAAV;;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAKN,EALM,CAAT;AAQA,MAAMD,OAAO,GAAGZ,OAAO,CACrB;AAAA,WAAM,CACJ;AACEoB,MAAAA,MAAM,EAAE,iBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADI,EAKJ;AACED,MAAAA,MAAM,EAAE,wBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALI,EASJ;AACED,MAAAA,MAAM,EAAE,sBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KATI,CAAN;AAAA,GADqB,EAerB,EAfqB,CAAvB;AAmBA,sBACE,iDAAWP,aAAa,EAAxB;AAAA,4BACC;AAAA,gBACGE,YAAY,CAACM,GAAb,CAAiB,UAAAC,WAAW;AAAA,4BAC3B,8CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,UAAAI,MAAM;AAAA,gCAC7B,8CAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,wBACGD,MAAM,CAACE,MAAP,CAAc,QAAd;AADH;AAAA;AAAA;AAAA;AAAA,qBAD6B;AAAA,WAA9B;AADH;AAAA;AAAA;AAAA;AAAA,iBAD2B;AAAA,OAA5B;AADH;AAAA;AAAA;AAAA;AAAA,aADD,eAYC,iDAAWb,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACK,GAAL,CAAS,UAAAO,GAAG,EAAI;AACfX,QAAAA,UAAU,CAACW,GAAD,CAAV;AACA,4BACE,8CAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACGD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAc,UAAAU,IAAI,EAAI;AACrB,gCACE,8CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBACGD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AADH;AAAA;AAAA;AAAA;AAAA,qBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,iBADF;AAYD,OAdA;AADH;AAAA;AAAA;AAAA;AAAA,aAZD;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgCD,CAvEM;;GAAMtB,I;UAGWF,Q;;;KAHXE,I","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport api from '../services/api';\nimport { Column, CellProps, useTable } from 'react-table';\nimport { organizeClientsAccounts } from \"../helpers/clients\";\n\nexport const Bank = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [clients, setClients] = useState([]);\n  const tableInstance = useTable({ columns, data });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance\n\n  useEffect(async () => {\n    const {data} = await api.get('transactions.json');\n    setTransactions(data)\n    setClients(organizeClientsAccounts(data));\n    \n  }, []);\n\n  \n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Customer's name\",\n        accessor: 'name',\n      },\n      {\n        Header: \"Checking account total\",\n        accessor: 'checking',\n      },\n      {\n        Header: \"Saving account total\",\n        accessor: 'saving',\n      },\n    ],\n    [],\n  );\n\n\n  return (\n    <table {...getTableProps()}>\n     <thead>\n       {headerGroups.map(headerGroup => (\n         <tr {...headerGroup.getHeaderGroupProps()}>\n           {headerGroup.headers.map(column => (\n             <th {...column.getHeaderProps()}>\n               {column.render('Header')}\n             </th>\n           ))}\n         </tr>\n       ))}\n     </thead>\n     <tbody {...getTableBodyProps()}>\n       {rows.map(row => {\n         prepareRow(row)\n         return (\n           <tr {...row.getRowProps()}>\n             {row.cells.map(cell => {\n               return (\n                 <td {...cell.getCellProps()}>\n                   {cell.render('Cell')}\n                 </td>\n               )\n             })\n             }\n           </tr>\n         )\n       })}\n     </tbody>\n   </table>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}